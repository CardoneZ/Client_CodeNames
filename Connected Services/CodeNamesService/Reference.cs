//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CodeNamesClientSide.CodeNamesService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/DataModels")]
    [System.SerializableAttribute()]
    public partial class Player : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Player_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Player_Id {
            get {
                return this.Player_IdField;
            }
            set {
                if ((this.Player_IdField.Equals(value) != true)) {
                    this.Player_IdField = value;
                    this.RaisePropertyChanged("Player_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CodeNamesService.IPlayerManagerService")]
    public interface IPlayerManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManagerService/AddUserAccountToDatabase", ReplyAction="http://tempuri.org/IPlayerManagerService/AddUserAccountToDatabaseResponse")]
        void AddUserAccountToDatabase(string nickname, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManagerService/AddUserAccountToDatabase", ReplyAction="http://tempuri.org/IPlayerManagerService/AddUserAccountToDatabaseResponse")]
        System.Threading.Tasks.Task AddUserAccountToDatabaseAsync(string nickname, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManagerService/Login", ReplyAction="http://tempuri.org/IPlayerManagerService/LoginResponse")]
        CodeNamesClientSide.CodeNamesService.Player Login(string nickname, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManagerService/Login", ReplyAction="http://tempuri.org/IPlayerManagerService/LoginResponse")]
        System.Threading.Tasks.Task<CodeNamesClientSide.CodeNamesService.Player> LoginAsync(string nickname, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManagerService/ShowUsersAccounts", ReplyAction="http://tempuri.org/IPlayerManagerService/ShowUsersAccountsResponse")]
        void ShowUsersAccounts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManagerService/ShowUsersAccounts", ReplyAction="http://tempuri.org/IPlayerManagerService/ShowUsersAccountsResponse")]
        System.Threading.Tasks.Task ShowUsersAccountsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlayerManagerServiceChannel : CodeNamesClientSide.CodeNamesService.IPlayerManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlayerManagerServiceClient : System.ServiceModel.ClientBase<CodeNamesClientSide.CodeNamesService.IPlayerManagerService>, CodeNamesClientSide.CodeNamesService.IPlayerManagerService {
        
        public PlayerManagerServiceClient() {
        }
        
        public PlayerManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlayerManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddUserAccountToDatabase(string nickname, string email, string password) {
            base.Channel.AddUserAccountToDatabase(nickname, email, password);
        }
        
        public System.Threading.Tasks.Task AddUserAccountToDatabaseAsync(string nickname, string email, string password) {
            return base.Channel.AddUserAccountToDatabaseAsync(nickname, email, password);
        }
        
        public CodeNamesClientSide.CodeNamesService.Player Login(string nickname, string password) {
            return base.Channel.Login(nickname, password);
        }
        
        public System.Threading.Tasks.Task<CodeNamesClientSide.CodeNamesService.Player> LoginAsync(string nickname, string password) {
            return base.Channel.LoginAsync(nickname, password);
        }
        
        public void ShowUsersAccounts() {
            base.Channel.ShowUsersAccounts();
        }
        
        public System.Threading.Tasks.Task ShowUsersAccountsAsync() {
            return base.Channel.ShowUsersAccountsAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CodeNamesService.ILobbyService", CallbackContract=typeof(CodeNamesClientSide.CodeNamesService.ILobbyServiceCallback))]
    public interface ILobbyService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyService/SubscribeToUserEvents")]
        void SubscribeToUserEvents();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyService/SubscribeToUserEvents")]
        System.Threading.Tasks.Task SubscribeToUserEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyService/UnsubscribeFromUserEvents")]
        void UnsubscribeFromUserEvents();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyService/UnsubscribeFromUserEvents")]
        System.Threading.Tasks.Task UnsubscribeFromUserEventsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILobbyServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyService/UserLoggedIn")]
        void UserLoggedIn(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyService/UserLoggedOut")]
        void UserLoggedOut(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILobbyServiceChannel : CodeNamesClientSide.CodeNamesService.ILobbyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LobbyServiceClient : System.ServiceModel.DuplexClientBase<CodeNamesClientSide.CodeNamesService.ILobbyService>, CodeNamesClientSide.CodeNamesService.ILobbyService {
        
        public LobbyServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public LobbyServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public LobbyServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void SubscribeToUserEvents() {
            base.Channel.SubscribeToUserEvents();
        }
        
        public System.Threading.Tasks.Task SubscribeToUserEventsAsync() {
            return base.Channel.SubscribeToUserEventsAsync();
        }
        
        public void UnsubscribeFromUserEvents() {
            base.Channel.UnsubscribeFromUserEvents();
        }
        
        public System.Threading.Tasks.Task UnsubscribeFromUserEventsAsync() {
            return base.Channel.UnsubscribeFromUserEventsAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CodeNamesService.IFriendListService", CallbackContract=typeof(CodeNamesClientSide.CodeNamesService.IFriendListServiceCallback))]
    public interface IFriendListService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendListService/SendFriendRequest", ReplyAction="http://tempuri.org/IFriendListService/SendFriendRequestResponse")]
        void SendFriendRequest(string toUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendListService/SendFriendRequest", ReplyAction="http://tempuri.org/IFriendListService/SendFriendRequestResponse")]
        System.Threading.Tasks.Task SendFriendRequestAsync(string toUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendListService/AcceptFriendRequest", ReplyAction="http://tempuri.org/IFriendListService/AcceptFriendRequestResponse")]
        void AcceptFriendRequest(string fromUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendListService/AcceptFriendRequest", ReplyAction="http://tempuri.org/IFriendListService/AcceptFriendRequestResponse")]
        System.Threading.Tasks.Task AcceptFriendRequestAsync(string fromUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendListService/GetFriendList")]
        void GetFriendList();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendListService/GetFriendList")]
        System.Threading.Tasks.Task GetFriendListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFriendListServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendListService/FriendRequestReceived", ReplyAction="http://tempuri.org/IFriendListService/FriendRequestReceivedResponse")]
        void FriendRequestReceived(string fromUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendListService/FriendRequestAccepted", ReplyAction="http://tempuri.org/IFriendListService/FriendRequestAcceptedResponse")]
        void FriendRequestAccepted(string fromUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendListService/FriendListUpdated", ReplyAction="http://tempuri.org/IFriendListService/FriendListUpdatedResponse")]
        void FriendListUpdated(string[] friends);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFriendListServiceChannel : CodeNamesClientSide.CodeNamesService.IFriendListService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FriendListServiceClient : System.ServiceModel.DuplexClientBase<CodeNamesClientSide.CodeNamesService.IFriendListService>, CodeNamesClientSide.CodeNamesService.IFriendListService {
        
        public FriendListServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public FriendListServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public FriendListServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public FriendListServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public FriendListServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void SendFriendRequest(string toUser) {
            base.Channel.SendFriendRequest(toUser);
        }
        
        public System.Threading.Tasks.Task SendFriendRequestAsync(string toUser) {
            return base.Channel.SendFriendRequestAsync(toUser);
        }
        
        public void AcceptFriendRequest(string fromUser) {
            base.Channel.AcceptFriendRequest(fromUser);
        }
        
        public System.Threading.Tasks.Task AcceptFriendRequestAsync(string fromUser) {
            return base.Channel.AcceptFriendRequestAsync(fromUser);
        }
        
        public void GetFriendList() {
            base.Channel.GetFriendList();
        }
        
        public System.Threading.Tasks.Task GetFriendListAsync() {
            return base.Channel.GetFriendListAsync();
        }
    }
}
